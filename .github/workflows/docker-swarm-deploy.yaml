name: Build and Deploy to Azure Container Apps

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Check out code
        uses: actions/checkout@v4

      # Debug: Print the Service Principal credentials (values will be masked)
      - name: Debug Service Principal credentials
        run: |
          echo "AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}"
          echo "AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}"
          echo "AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}"

      # Log in to Azure using Service Principal
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}","subscriptionId":"0e6dc202-bcae-4b8b-b1de-a8f3a04341d6"}'

      # Log in to Azure Container Registry
      - name: Log in to ACR
        run: |
          az acr login --name probuild

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Build and push Docker image to ACR
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: probuild.azurecr.io/probuildai-backend:${{ github.sha }}
          build-args: |
            ASPNETCORE_ENVIRONMENT=Production

      # Debug: Print the environment variables (values will be masked)
      - name: Debug environment variables
        run: |
          echo "SQL_USER: ${{ secrets.SQL_USER }}"
          echo "SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}"
          echo "AZURE_BLOB_KEY: ${{ secrets.AZURE_BLOB_KEY }}"
          echo "JWT_KEY: ${{ secrets.JWT_KEY }}"

      # Update environment variables using Azure CLI
      - name: Update environment variables
        run: |
          az containerapp update \
            --name probuildai-backend \
            --resource-group rg-Probuild \
            --set-env-vars \
              "SQL_USER=${{ secrets.SQL_USER }}" \
              "SQL_PASSWORD=${{ secrets.SQL_PASSWORD }}" \
              "AZURE_BLOB_KEY=${{ secrets.AZURE_BLOB_KEY }}" \
              "JWT_KEY=${{ secrets.JWT_KEY }}" \
              "ASPNETCORE_URLS=http://+:8080" \
              "ASPNETCORE_ENVIRONMENT=Production"

      # Deploy to Azure Container Apps
      - name: Deploy to Azure Container Apps
        uses: azure/container-apps-deploy-action@v1
        with:
          appSourcePath: .  # Path to your app (Docker context)
          acrName: probuild  # Your Azure Container Registry name
          containerAppName: probuildai-backend
          resourceGroup: rg-Probuild
          imageToDeploy: probuild.azurecr.io/probuildai-backend:${{ github.sha }}
          containerConfig: |
            containers:
            - name: probuildai-backend
              image: probuild.azurecr.io/probuildai-backend:${{ github.sha }}
              probes:
              - type: startup
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 60
                periodSeconds: 10
                timeoutSeconds: 5
                failureThreshold: 3
              resources:
                cpu: 4
                memory: 8Gi
