name: Build and Deploy to Azure Container Apps (Dev)

on:
  push:
    branches:
      - Development

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Ensure PromptTemplates directory is included
        run: |
          echo "Ensuring PromptTemplates is available in build context..."
          mkdir -p ./ProbuildBackend/PromptTemplates
          cp -r ./PromptTemplates/* ./ProbuildBackend/PromptTemplates/ || true
          ls -al ./ProbuildBackend/PromptTemplates || echo "No templates found"

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}","subscriptionId":"0e6dc202-bcae-4b8b-b1de-a8f3a04341d6"}'

      - name: Log in to ACR
        run: |
          az acr login --name probuild

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: probuild.azurecr.io/probuildai-backend:dev-${{ github.sha }}

      - name: Deploy to Azure Container Apps (Dev)
        run: |
          az containerapp update \
            --name probuildai-backend-dev \
            --resource-group rg-Probuild \
            --image probuild.azurecr.io/probuildai-backend:dev-${{ github.sha }} \
            --set-env-vars \
              "SQL_USER=${{ secrets.SQL_USER }}" \
              "SQL_PASSWORD=${{ secrets.SQL_PASSWORD }}" \
              "AZURE_BLOB_KEY=${{ secrets.AZURE_BLOB_KEY }}" \
              "JWT_KEY=${{ secrets.JWT_KEY }}" \
              "ASPNETCORE_URLS=http://+:8081" \
              "ELASTIC_ENABLED=false" \
              "GPTAPIKEY=${{ secrets.GPTAPIKEY }}" \
              "DB_CONNECTION_STRING=${{ secrets.DB_CONNECTION_STRING_DEV }}" \
              "FORCE_NEW_REVISION=true" \
            --set template.containers[0].probes=null \
            --set ingress.targetPort=8081

      - name: Check Container App Logs
        run: |
          az containerapp logs show --name probuildai-backend-dev --resource-group rg-Probuild --follow --tail 100
        continue-on-error: true
